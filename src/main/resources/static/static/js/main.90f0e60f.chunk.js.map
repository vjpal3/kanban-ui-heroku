{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJwtToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","Component","connect","window","confirm","delete","CreateProjectButton","Dashboard","getProjects","projects","map","key","state","get","res","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userNotAuthenticated","userIsAuthenticated","fullname","data-toggle","data-target","AddProject","start_date","end_date","errors","nextProps","setState","e","target","name","value","preventDefault","newProject","onSubmit","classnames","placeholder","onChange","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","project_task","priority","projectSequence","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","project_tasks","backlog","projectNotFound","role","boardAlgorithm","initialState","booleanActionPayload","combineReducers","action","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","acceptanceCriterion","created_at","getProjectTask","updated_task","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_token","currentTime","Date","now","exp","App","exact","path","ReactDOM","document","getElementById"],"mappings":"+WAIaA,EAAgB,SAACC,EAASC,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAEzCC,IAAMC,KAAK,gBAAiBL,GAFa,OAG/CC,EAAQK,KAAK,cAEbJ,EAAS,CACPK,KCVoB,aDWpBC,QAAS,KAPoC,gDAU/CN,EAAS,CACPK,KCfoB,aDgBpBC,QAAS,KAAMC,SAASC,OAZqB,yDAAtB,uD,gQEEvBC,E,iXACJC,cAAgB,SAAAC,GACd,EAAKC,MAAMC,cAAcF,I,uDAGjB,IAAD,OACCb,EAAYgB,KAAKF,MAAjBd,QACR,OACE,yBAAKiB,UAAU,aACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,WAAWjB,EAAQkB,oBAErC,yBAAKD,UAAU,2BACb,4BAAKjB,EAAQmB,aACb,2BAAInB,EAAQoB,cAEd,yBAAKH,UAAU,8BACb,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMI,GAAE,wBAAmBrB,EAAQkB,oBACjC,wBAAID,UAAU,yBACZ,uBAAGA,UAAU,6BAAb,qBAGJ,kBAAC,IAAD,CAAMI,GAAE,yBAAoBrB,EAAQkB,oBAClC,wBAAID,UAAU,0BACZ,uBAAGA,UAAU,mBAAb,0BAIJ,wBACEA,UAAU,yBACVK,QAAS,kBAAM,EAAKV,cAAcZ,EAAQkB,qBAE1C,uBAAGD,UAAU,2BAAb,6B,GAnCQM,aAkDXC,cAAQ,KAAM,CAAET,cFfF,SAAAF,GAAE,8CAAI,WAAMX,GAAN,SAAAC,EAAA,0DAE/BsB,OAAOC,QACL,6EAH6B,gCAMzBtB,IAAMuB,OAAN,uBAA6Bd,IANJ,OAO/BX,EAAS,CACPK,KC9CwB,iBD+CxBC,QAASK,IAToB,2CAAJ,wDEehBW,CAAiCb,GC3CjCiB,EAVa,WAC1B,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMP,GAAG,cAAcJ,UAAU,uBAAjC,sB,gQCCAY,E,uVAEFb,KAAKF,MAAMgB,gB,+BAGH,IACAC,EAAaf,KAAKF,MAAMd,QAAxB+B,SAER,OACE,yBAAKd,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBAAd,YACA,6BACA,kBAAC,EAAD,MACA,6BACA,6BACCc,EAASC,KAAI,SAAAhC,GAAO,OACnB,kBAAC,EAAD,CAAaiC,IAAKjC,EAAQa,GAAIb,QAASA,e,GAnB/BuB,aAsCTC,eAJS,SAAAU,GAAK,MAAK,CAChClC,QAASkC,EAAMlC,WAGuB,CAAE8B,YJxBf,yDAAM,WAAM5B,GAAN,eAAAC,EAAA,sEACbC,IAAM+B,IAAI,oBADG,OACzBC,EADyB,OAE/BlC,EAAS,CACPK,KCvBwB,eDwBxBC,QAAS4B,EAAI1B,OAJgB,2CAAN,wDIwBZc,CAA0CK,G,iBClC1CQ,EATK,SAACC,GACfA,EAEFlC,IAAMmC,SAASC,QAAQC,OAAvB,cAAiDH,SAE1ClC,IAAMmC,SAASC,QAAQC,OAAvB,eC8CEC,EAAS,kBAAM,SAACxC,GAC3ByC,aAAaC,WAAW,YACxBP,GAAY,GACZnC,EAAS,CACPK,KLhD4B,mBKiD5BC,QAAS,O,gQCpDPqC,E,4UAEF7B,KAAKF,MAAM4B,SACXjB,OAAOqB,SAASC,KAAO,M,+BAGf,IAkDJC,EAlDG,SACsBhC,KAAKF,MAAMmC,SAAhCC,EADD,EACCA,WAAYC,EADb,EACaA,KAEdC,EACJ,yBAAKnC,UAAU,2BAA2BJ,GAAG,cAC3C,wBAAII,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,aAA9B,YAIF,wBAAIJ,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,UAA9B,YAQFgC,EACJ,yBAAKpC,UAAU,2BAA2BJ,GAAG,cAC3C,wBAAII,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,cAA9B,eAMJ,wBAAIJ,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,cAC5B,uBAAGJ,UAAU,4BACZkC,EAAKG,WAGV,wBAAIrC,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,WACVI,GAAG,UACHC,QAAS,kBAAM,EAAKoB,WAHtB,aAgBR,OAHAM,EACEE,GAAcC,EAAOE,EAAsBD,EAG3C,yBAAKnC,UAAU,uDACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeI,GAAG,KAAlC,oCAGA,4BACEJ,UAAU,iBACVV,KAAK,SACLgD,cAAY,WACZC,cAAY,eAEZ,0BAAMvC,UAAU,yBAEjB+B,Q,GA1EUzB,aA0FNC,eAJS,SAACU,GAAD,MAAY,CAClCe,SAAUf,EAAMe,YAGsB,CAAEP,UAA3BlB,CAAqCqB,G,iSC1F9CY,E,uNACJ,aAAe,IAAD,8BACZ,gBAEKvB,MAAQ,CACXf,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbsC,WAAY,GACZC,SAAU,GACVC,OAAQ,IATE,E,sEAaYC,GACpBA,EAAUD,QACZ5C,KAAK8C,SAAS,CAAEF,OAAQC,EAAUD,W,+BAI7BG,GACP/C,KAAK8C,SAAL,eACGC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAIrBH,GACPA,EAAEI,iBACF,IAAMC,EAAa,CACjBjD,YAAaH,KAAKkB,MAAMf,YACxBD,kBAAmBF,KAAKkB,MAAMhB,kBAC9BE,YAAaJ,KAAKkB,MAAMd,YACxBsC,WAAY1C,KAAKkB,MAAMwB,WACvBC,SAAU3C,KAAKkB,MAAMyB,UAEvB3C,KAAKF,MAAMf,cAAcqE,EAAYpD,KAAKF,MAAMb,W,+BAGxC,IAAD,OACC2D,EAAW5C,KAAKkB,MAAhB0B,OAER,OACE,6BACE,yBAAK3C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAMoD,SAAU,SAAAN,GAAC,OAAI,EAAKM,SAASN,KACjC,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWqD,IAAW,gCAAiC,CACrD,aAAcV,EAAOzC,cAEvBoD,YAAY,eACZN,KAAK,cACLC,MAAOlD,KAAKkB,MAAMf,YAClBqD,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,MAE9BH,EAAOzC,aACN,yBAAKF,UAAU,oBACZ2C,EAAOzC,cAId,yBAAKF,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAO1C,oBAEvBqD,YAAY,oBACZN,KAAK,oBACLC,MAAOlD,KAAKkB,MAAMhB,kBAClBsD,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,MAE9BH,EAAO1C,mBACN,yBAAKD,UAAU,oBACZ2C,EAAO1C,oBAId,yBAAKD,UAAU,cACb,8BACEA,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAOxC,cAEvBmD,YAAY,sBACZN,KAAK,cACLC,MAAOlD,KAAKkB,MAAMd,YAClBoD,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,MAG9BH,EAAOxC,aACN,yBAAKH,UAAU,oBACZ2C,EAAOxC,cAId,0CACA,yBAAKH,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVgD,KAAK,aACLC,MAAOlD,KAAKkB,MAAMwB,WAClBc,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,OAGjC,kDACA,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVgD,KAAK,WACLC,MAAOlD,KAAKkB,MAAMyB,SAClBa,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,OAIjC,2BACExD,KAAK,SACLU,UAAU,6C,GA5HLM,aAiJVC,eAJS,SAAAU,GAAK,MAAK,CAChC0B,OAAQ1B,EAAM0B,UAGwB,CAAE7D,iBAA3ByB,CAA4CiC,G,gQCjJrDgB,E,uNACJ,aAAe,IAAD,8BACZ,gBAEKvC,MAAQ,CACXrB,GAAI,GACJM,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbsC,WAAY,GACZC,SAAU,GACVC,OAAQ,IAVE,E,gEAcO,IACX/C,EAAOG,KAAKF,MAAM4D,MAAMC,OAAxB9D,GACRG,KAAKF,MAAM8D,WAAW/D,EAAIG,KAAKF,MAAMb,W,gDAGb4D,GACpBA,EAAUD,QACZ5C,KAAK8C,SAAS,CACZF,OAAQC,EAAUD,SAHa,MAa/BC,EAAU7D,QANZa,EAPiC,EAOjCA,GACAM,EARiC,EAQjCA,YACAD,EATiC,EASjCA,kBACAE,EAViC,EAUjCA,YACAsC,EAXiC,EAWjCA,WACAC,EAZiC,EAYjCA,SAGF3C,KAAK8C,SAAS,CACZjD,KACAM,cACAD,oBACAE,cACAsC,aACAC,e,+BAIKI,GACP/C,KAAK8C,SAAL,eACGC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAIrBH,GACPA,EAAEI,iBACF,IAAMU,EAAgB,CACpBhE,GAAIG,KAAKkB,MAAMrB,GACfM,YAAaH,KAAKkB,MAAMf,YACxBD,kBAAmBF,KAAKkB,MAAMhB,kBAC9BE,YAAaJ,KAAKkB,MAAMd,YACxBsC,WAAY1C,KAAKkB,MAAMwB,WACvBC,SAAU3C,KAAKkB,MAAMyB,UAEvB3C,KAAKF,MAAMf,cAAc8E,EAAe7D,KAAKF,MAAMb,W,+BAG3C,IAAD,OACC2D,EAAW5C,KAAKkB,MAAhB0B,OAER,OACE,yBAAK3C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAMoD,SAAU,SAAAN,GAAC,OAAI,EAAKM,SAASN,KACjC,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWqD,IAAW,gCAAiC,CACrD,aAAcV,EAAOzC,cAEvB8C,KAAK,cACLC,MAAOlD,KAAKkB,MAAMf,YAClBqD,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,MAE9BH,EAAOzC,aACN,yBAAKF,UAAU,oBAAoB2C,EAAOzC,cAG9C,yBAAKF,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVgD,KAAK,oBACLC,MAAOlD,KAAKkB,MAAMhB,kBAClB4D,UAAQ,KAIZ,yBAAK7D,UAAU,cACb,8BACEA,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAOxC,cAEvB6C,KAAK,cACLC,MAAOlD,KAAKkB,MAAMd,YAClBoD,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,MAE9BH,EAAOxC,aACN,yBAAKH,UAAU,oBAAoB2C,EAAOxC,cAG9C,0CACA,yBAAKH,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVgD,KAAK,aACLC,MAAOlD,KAAKkB,MAAMwB,WAClBc,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,OAGjC,kDACA,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVgD,KAAK,WACLC,MAAOlD,KAAKkB,MAAMyB,SAClBa,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,OAIjC,2BACExD,KAAK,SACLU,UAAU,4C,GAvIAM,aA8JbC,eALS,SAAAU,GAAK,MAAK,CAChClC,QAASkC,EAAMlC,QAAQA,QACvB4D,OAAQ1B,EAAM0B,UAGwB,CAAEgB,WTvIhB,SAAC/D,EAAIZ,GAAL,8CAAiB,WAAMC,GAAN,eAAAC,EAAA,+EAErBC,IAAM+B,IAAN,uBAA0BtB,IAFL,OAEjCuB,EAFiC,OAGvClC,EAAS,CACPK,KC/BqB,cDgCrBC,QAAS4B,EAAI1B,OALwB,gDAQvCT,EAAQK,KAAK,cAR0B,yDAAjB,uDSuI4BP,iBAAvCyB,CACbiD,G,gQC/JIM,E,iVACUC,EAAYC,GACxBjE,KAAKF,MAAMoE,kBAAkBF,EAAYC,K,+BAGjC,IAGJE,EACAC,EAJG,OACCC,EAAiBrE,KAAKF,MAAtBuE,aAiBR,OAb8B,IAA1BA,EAAaC,WACfF,EAAgB,uBAChBD,EAAiB,QAEW,IAA1BE,EAAaC,WACfF,EAAgB,wBAChBD,EAAiB,UAEW,IAA1BE,EAAaC,WACfF,EAAgB,qBAChBD,EAAiB,OAIjB,yBAAKlE,UAAU,sBACb,yBAAKA,UAAS,mCAA8BmE,IAA5C,OACOC,EAAaE,gBADpB,iBACmDJ,GAEnD,yBAAKlE,UAAU,sBACb,wBAAIA,UAAU,cAAcoE,EAAaG,SACzC,uBAAGvE,UAAU,4BACVoE,EAAaI,oBAEhB,kBAAC,IAAD,CACEpE,GAAE,6BAAwBgE,EAAanE,kBAArC,YAA0DmE,EAAaE,iBACzEtE,UAAU,mBAFZ,iBAOA,4BACEA,UAAU,sBACVK,QAAS,kBACP,EAAKV,cACHyE,EAAanE,kBACbmE,EAAaE,mBALnB,gB,GAxCgBhE,aA6DXC,cAAQ,KAAM,CAAE0D,kBCgBE,SAACF,EAAYC,GAAb,8CAAuB,WAAM/E,GAAN,SAAAC,EAAA,0DAEpDsB,OAAOC,QAAP,4CACuCuD,EADvC,qCAFoD,gCAM9C7E,IAAMuB,OAAN,uBAA6BqD,EAA7B,YAA2CC,IANG,OAOpD/E,EAAS,CACPK,KVnF6B,sBUoF7BC,QAASyE,IATyC,2CAAvB,wDDhBlBzD,CAAqCuD,G,gQERrCW,E,4UA7CX,IAVQ,IAEFC,EADyB3E,KAAKF,MAA5B8E,mBACyB5D,KAAI,SAAAqD,GAAY,OAC/C,kBAAC,EAAD,CAAapD,IAAKoD,EAAaxE,GAAIwE,aAAcA,OAG/CQ,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAEPC,EAAI,EAAGA,EAAIL,EAAMM,OAAQD,IACW,UAAvCL,EAAMK,GAAGlF,MAAMuE,aAAaa,QAC9BL,EAAUvF,KAAKqF,EAAMK,IAEoB,gBAAvCL,EAAMK,GAAGlF,MAAMuE,aAAaa,QAC9BJ,EAAgBxF,KAAKqF,EAAMK,IAEc,SAAvCL,EAAMK,GAAGlF,MAAMuE,aAAaa,QAC9BH,EAAUzF,KAAKqF,EAAMK,IAIzB,OACE,yBAAK/E,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uCACb,uCAGH4E,GAEH,yBAAK5E,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qCACb,6CAGH6E,GAEH,yBAAK7E,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qCACb,sCAGH8E,S,GAhDSxE,a,gQCIhB4E,E,uNAEJ,aAAe,IAAD,8BACZ,gBACKjE,MAAQ,CACX0B,OAAQ,IAHE,E,gEAOO,IACX/C,EAAOG,KAAKF,MAAM4D,MAAMC,OAAxB9D,GACRG,KAAKF,MAAMsF,WAAWvF,K,gDAGEgD,GACpBA,EAAUD,QACZ5C,KAAK8C,SAAS,CACZF,OAAQC,EAAUD,W,+BAKd,IAIJyC,EAHIxF,EAAOG,KAAKF,MAAM4D,MAAMC,OAAxB9D,GACAyF,EAAkBtF,KAAKF,MAAMyF,QAA7BD,cAiCR,OAFAD,EA1BuB,SAACzC,EAAQ0C,GAC9B,OAAIA,EAAcL,OAAS,EACrBrC,EAAO4C,gBAEP,yBAAKvF,UAAU,iCAAiCwF,KAAK,SAClD7C,EAAO4C,iBAGH5C,EAAO1C,kBAEd,yBAAKD,UAAU,iCAAiCwF,KAAK,SAClD7C,EAAO1C,mBAKV,yBAAKD,UAAU,+BAA+BwF,KAAK,SAAnD,mCAMG,kBAAC,EAAD,CAASb,mBAAoBU,IAIzBI,CA9BI1F,KAAKkB,MAAhB0B,OA8B8B0C,GAGpC,yBAAKrF,UAAU,aACb,kBAAC,IAAD,CAAMI,GAAE,0BAAqBR,GAAMI,UAAU,wBAC3C,uBAAGA,UAAU,sBAAb,yBAEF,6BACA,6BACCoF,O,GAhEkB9E,aAiFZC,eALS,SAACU,GAAD,MAAY,CAClCqE,QAASrE,EAAMqE,QACf3C,OAAQ1B,EAAM0B,UAGwB,CAAEwC,WF3DhB,SAAApB,GAAU,8CAAI,WAAM9E,GAAN,eAAAC,EAAA,+EAElBC,IAAM+B,IAAN,uBAA0B6C,IAFR,OAE9B5C,EAF8B,OAGpClC,EAAS,CACPK,KV3BqB,cU4BrBC,QAAS4B,EAAI1B,OALqB,gDAQpCR,EAAS,CACPK,KVtCoB,aUuCpBC,QAAS,KAAIC,SAASC,OAVY,yDAAJ,wDE2DrBc,CAAyC2E,G,gBCtFlDQ,GAAe,G,SCAfA,GAAe,CACnB5E,SAAU,GACV/B,QAAS,ICEL2G,GAAe,CACnBL,cAAe,GACfjB,aAAc,ICNVsB,GAAe,CACnBxD,KAAM,GACND,YAAY,GAGR0D,GAAuB,SAACpG,GAC5B,QAAIA,GCFSqG,eAAgB,CAC7BjD,OJHa,WAAwC,IAA/B1B,EAA8B,uDAAtByE,GAAcG,EAAQ,uCACpD,OAAQA,EAAOvG,MACb,IbNsB,aaOpB,OAAOuG,EAAOtG,QAChB,QACE,OAAO0B,IIDXlC,QHDa,WAAwC,IAA/BkC,EAA8B,uDAAtByE,GAAcG,EAAQ,uCACpD,OAAQA,EAAOvG,MACb,IdRwB,ecStB,OAAO,gBACF2B,EADL,CAEEH,SAAU+E,EAAOtG,UAGrB,IdbuB,cccrB,OAAO,gBACF0B,EADL,CAEElC,QAAS8G,EAAOtG,UAGpB,IdlB0B,iBcmBxB,OAAO,gBACF0B,EADL,CAEEH,SAAUG,EAAMH,SAASgF,QACvB,SAAA/G,GAAO,OAAIA,EAAQkB,oBAAsB4F,EAAOtG,aAItD,QACE,OAAO0B,IGrBXqE,QFEa,WAAwC,IAA/BrE,EAA8B,uDAAtByE,GAAcG,EAAQ,uCACpD,OAAQA,EAAOvG,MACb,IfPuB,ceQrB,OAAO,gBACF2B,EADL,CAEEoE,cAAeQ,EAAOtG,UAG1B,IfZ4B,mBea1B,OAAO,gBACF0B,EADL,CAEEmD,aAAcyB,EAAOtG,UAGzB,IfjB+B,sBekB7B,OAAO,gBACF0B,EADL,CAEEoE,cAAepE,EAAMoE,cAAcS,QACjC,SAAA1B,GAAY,OAAIA,EAAaE,kBAAoBuB,EAAOtG,aAI9D,QACE,OAAO0B,IExBXe,SDGa,WAAyC,IAA/Bf,EAA8B,uDAAtByE,GAAcG,EAAQ,uCACrD,OAAQA,EAAOvG,MACb,IhBN4B,mBgBO1B,OAAO,gBACF2B,EADL,CAEEgB,WAAY0D,GAAqBE,EAAOtG,SACxC2C,KAAM2D,EAAOtG,UAEjB,QACE,OAAO0B,MElBPyE,GAAe,GACfK,GAAa,CAACC,KAIdC,GACJzF,OAAO0F,8BAAgC1F,OAAO0F,+BAgBjCC,GAdX3F,OAAO4F,UAAUC,UAAUC,SAAS,WAAaL,GAC3CM,YACNC,GACAd,GACAe,YAAQC,IAAe,WAAf,EAAmBX,IAAaE,KAGlCM,YACNC,GACAd,GACAe,YAAQC,IAAe,WAAf,EAAmBX,M,iQCdzBY,G,wNACJ,WAAY9G,GAAQ,IAAD,0BAETD,GADR,cAAMC,IACcA,MAAM4D,MAAMC,OAAxB9D,GAFS,OAIjB,EAAKqB,MAAQ,CACXsD,QAAS,GACTC,mBAAoB,GACpBS,OAAQ,GACRZ,SAAU,EACVuC,QAAS,GACT3G,kBAAmBL,EACnB+C,OAAQ,IAXO,E,sEAeOC,GACpBA,EAAUD,QACZ5C,KAAK8C,SAAS,CACZF,OAAQC,EAAUD,W,+BAKfG,GACP/C,KAAK8C,SAAL,eACGC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAIrBH,GACPA,EAAEI,iBAEF,IAAM2D,EAAiB,CACrBtC,QAASxE,KAAKkB,MAAMsD,QACpBC,mBAAoBzE,KAAKkB,MAAMuD,mBAC/BS,OAAQlF,KAAKkB,MAAMgE,OACnBZ,SAAUtE,KAAKkB,MAAMoD,SACrBuC,QAAS7G,KAAKkB,MAAM2F,SAGtB7G,KAAKF,MAAMiH,eACT/G,KAAKkB,MAAMhB,kBACX4G,EACA9G,KAAKF,MAAMb,W,+BAIL,IAAD,OACCY,EAAOG,KAAKF,MAAM4D,MAAMC,OAAxB9D,GACA+C,EAAW5C,KAAKkB,MAAhB0B,OACR,OACE,yBAAK3C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMI,GAAE,wBAAmBR,GAAMI,UAAU,iBAA3C,yBAGA,wBAAIA,UAAU,yBAAd,4BAGA,uBAAGA,UAAU,oBAAb,+BAEA,0BAAMoD,SAAU,SAAAN,GAAC,OAAI,EAAKM,SAASN,KACjC,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAO4B,UAEvBvB,KAAK,UACLM,YAAY,uBACZL,MAAOlD,KAAKkB,MAAMsD,QAClBhB,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,MAE9BH,EAAO4B,SACN,yBAAKvE,UAAU,oBAAoB2C,EAAO4B,UAI9C,yBAAKvE,UAAU,cACb,8BACEA,UAAU,+BACVsD,YAAY,sBACZN,KAAK,qBACLC,MAAOlD,KAAKkB,MAAMuD,mBAClBjB,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,OAGjC,wCACA,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVgD,KAAK,UACLC,MAAOlD,KAAKkB,MAAM2F,QAClBrD,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,OAGjC,yBAAK9C,UAAU,cACb,4BACEA,UAAU,+BACVgD,KAAK,WACLC,MAAOlD,KAAKkB,MAAMoD,SAClBd,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,KAE7B,4BAAQG,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIJ,yBAAKjD,UAAU,cACb,4BACEA,UAAU,+BACVgD,KAAK,SACLC,MAAOlD,KAAKkB,MAAMgE,OAClB1B,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,KAE7B,4BAAQG,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIJ,2BACE3D,KAAK,SACLU,UAAU,4C,GAlICM,aAsJdC,gBAJS,SAAAU,GAAK,MAAK,CAChC0B,OAAQ1B,EAAM0B,UAGwB,CAAEmE,eTtJZ,SAC5B/C,EACAK,EACApF,GAH4B,8CAIzB,WAAMC,GAAN,SAAAC,EAAA,+EAEKC,IAAMC,KAAN,uBAA2B2E,GAAcK,GAF9C,OAGDpF,EAAQK,KAAR,wBAA8B0E,IAE9B9E,EAAS,CACPK,KVlBoB,aUmBpBC,QAAS,KAPV,gDAUDN,EAAS,CACPK,KVvBoB,aUwBpBC,QAAS,KAAIC,SAASC,OAZvB,yDAJyB,wDSsJfc,CAA6CoG,I,iQCpJtDI,G,wNACJ,aAAe,IAAD,8BACZ,gBACK9F,MAAQ,CACXrB,GAAI,GACJ0E,gBAAiB,GACjBC,QAAS,GACTyC,oBAAqB,GACrB/B,OAAQ,GACRZ,SAAU,GACVuC,QAAS,KACT3G,kBAAmB,GACnBgH,WAAY,GACZtE,OAAQ,IAZE,E,gEAgBO,IAAD,EACY5C,KAAKF,MAAM4D,MAAMC,OAAvCK,EADU,EACVA,WAAYC,EADF,EACEA,MACpBjE,KAAKF,MAAMqH,eAAenD,EAAYC,EAAOjE,KAAKF,MAAMb,W,gDAGhC4D,GACpBA,EAAUD,QACZ5C,KAAK8C,SAAS,CAAEF,OAAQC,EAAUD,SAFD,MAc/BC,EAAUwB,aATZxE,EALiC,EAKjCA,GACA0E,EANiC,EAMjCA,gBACAC,EAPiC,EAOjCA,QACAyC,EARiC,EAQjCA,oBACA/B,EATiC,EASjCA,OACAZ,EAViC,EAUjCA,SACAuC,EAXiC,EAWjCA,QACA3G,EAZiC,EAYjCA,kBACAgH,EAbiC,EAajCA,WAGFlH,KAAK8C,SAAS,CACZjD,KACA0E,kBACAC,UACAyC,sBACA/B,SACAZ,WACAuC,UACA3G,oBACAgH,iB,+BAIKnE,GACP/C,KAAK8C,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBACF,IAAMiE,EAAe,CACnBvH,GAAIG,KAAKkB,MAAMrB,GACf0E,gBAAiBvE,KAAKkB,MAAMqD,gBAC5BC,QAASxE,KAAKkB,MAAMsD,QACpByC,oBAAqBjH,KAAKkB,MAAM+F,oBAChC/B,OAAQlF,KAAKkB,MAAMgE,OACnBZ,SAAUtE,KAAKkB,MAAMoD,SACrBuC,QAAS7G,KAAKkB,MAAM2F,QACpB3G,kBAAmBF,KAAKkB,MAAMhB,kBAC9BgH,WAAYlH,KAAKkB,MAAMgG,YAGzBlH,KAAKF,MAAMuH,kBACTrH,KAAKkB,MAAMhB,kBACXF,KAAKkB,MAAMqD,gBACX6C,EACApH,KAAKF,MAAMb,W,+BAIL,IAAD,OACC2D,EAAW5C,KAAKkB,MAAhB0B,OACR,OACE,yBAAK3C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CACEI,GAAE,wBAAmBL,KAAKkB,MAAMhB,mBAChCD,UAAU,iBAFZ,yBAMA,wBAAIA,UAAU,yBAAd,uBACA,uBAAGA,UAAU,oBAAb,iBACiBD,KAAKkB,MAAMhB,kBAD5B,sBACkE,IAC/DF,KAAKkB,MAAMqD,iBAGd,0BAAMlB,SAAU,SAAAN,GAAC,OAAI,EAAKM,SAASN,KACjC,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAO4B,UAEvBvB,KAAK,UACLM,YAAY,uBACZL,MAAOlD,KAAKkB,MAAMsD,QAClBhB,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,MAE9BH,EAAO4B,SACN,yBAAKvE,UAAU,oBAAoB2C,EAAO4B,UAI9C,yBAAKvE,UAAU,cACb,8BACEA,UAAU,+BACVsD,YAAY,uBACZN,KAAK,sBACLC,MAAOlD,KAAKkB,MAAM+F,oBAClBzD,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,OAGjC,wCACA,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVgD,KAAK,UACLC,MAAOlD,KAAKkB,MAAM2F,QAClBrD,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,OAGjC,yBAAK9C,UAAU,cACb,4BACEA,UAAU,+BACVgD,KAAK,WACLC,MAAOlD,KAAKkB,MAAMoD,SAClBd,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,KAE7B,4BAAQG,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIJ,yBAAKjD,UAAU,cACb,4BACEA,UAAU,+BACVgD,KAAK,SACLC,MAAOlD,KAAKkB,MAAMgE,OAClB1B,SAAU,SAAAT,GAAC,OAAI,EAAKS,SAAST,KAE7B,4BAAQG,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIJ,2BACE3D,KAAK,SACLU,UAAU,4C,GAlKIM,aAwLjBC,gBALS,SAAAU,GAAK,MAAK,CAChCmD,aAAcnD,EAAMqE,QAAQlB,aAC5BzB,OAAQ1B,EAAM0B,UAGwB,CAAEuE,eVrJZ,SAC5BnD,EACAC,EACAhF,GAH4B,8CAIzB,WAAMC,GAAN,eAAAC,EAAA,+EAEiBC,IAAM+B,IAAN,uBAA0B6C,EAA1B,YAAwCC,IAFzD,OAEK7C,EAFL,OAGDlC,EAAS,CACPK,KV9C0B,mBU+C1BC,QAAS4B,EAAI1B,OALd,gDASDT,EAAQK,KAAK,cATZ,yDAJyB,uDUqJ4B+H,kBVpIzB,SAC/BrD,EACAC,EACAI,EACApF,GAJ+B,8CAK5B,WAAMC,GAAN,SAAAC,EAAA,+EAEKC,IAAMkI,MAAN,uBAA4BtD,EAA5B,YAA0CC,GAASI,GAFxD,OAGDpF,EAAQK,KAAR,wBAA8B0E,IAC9B9E,EAAS,CACPK,KVxEoB,aUyEpBC,QAAS,KANV,gDASDN,EAAS,CACPK,KV7EoB,aU8EpBC,QAAS,KAAIC,SAASC,OAXvB,yDAL4B,wDUoIlBc,CACbwG,I,iQC9LIO,G,wVAEEvH,KAAKF,MAAMmC,SAASC,YACtBlC,KAAKF,MAAMb,QAAQK,KAAK,gB,+BAK1B,OACE,yBAAKW,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,oCAGA,uBAAGA,UAAU,QAAb,iEAGA,6BAEA,kBAAC,IAAD,CAAMA,UAAU,8BAA8BI,GAAG,aAAjD,WAIA,kBAAC,IAAD,CAAMJ,UAAU,gCAAgCI,GAAG,UAAnD,kB,GA1BME,aA8CPC,gBAJS,SAACU,GAAD,MAAY,CAClCe,SAAUf,EAAMe,YAGHzB,CAAyB+G,I,iQC7ClCC,G,wNACJ,aAAe,IAAD,8BACZ,gBACKtG,MAAQ,CACXuG,SAAU,GACVnF,SAAU,GACVoF,SAAU,GACVC,gBAAiB,GACjB/E,OAAQ,IAPE,E,gEAYR5C,KAAKF,MAAMmC,SAASC,YACtBlC,KAAKF,MAAMb,QAAQK,KAAK,gB,gDAIFuD,GACpBA,EAAUD,QACZ5C,KAAK8C,SAAS,CAAEF,OAAQC,EAAUD,W,+BAI7BG,GACP/C,KAAK8C,SAAL,eACGC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAIrBH,GACPA,EAAEI,iBACF,IAAMyE,EAAU,CACdH,SAAUzH,KAAKkB,MAAMuG,SACrBnF,SAAUtC,KAAKkB,MAAMoB,SACrBoF,SAAU1H,KAAKkB,MAAMwG,SACrBC,gBAAiB3H,KAAKkB,MAAMyG,iBAG9B3H,KAAKF,MAAM+H,cAAcD,EAAS5H,KAAKF,MAAMb,W,+BAGrC,IAAD,OACC2D,EAAW5C,KAAKkB,MAAhB0B,OACR,OACE,yBAAK3C,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,uBACA,0BACE6F,OAAO,sBACPzC,SAAU,SAACN,GAAD,OAAO,EAAKM,SAASN,KAE/B,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAON,WAEvBiB,YAAY,YACZN,KAAK,WACLC,MAAOlD,KAAKkB,MAAMoB,SAClBkB,SAAU,SAACT,GAAD,OAAO,EAAKS,SAAST,MAEhCH,EAAON,UACN,yBAAKrC,UAAU,oBAAoB2C,EAAON,WAG9C,yBAAKrC,UAAU,cACb,2BACEV,KAAK,QACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAO6E,WAEvBlE,YAAY,2BACZN,KAAK,WACLC,MAAOlD,KAAKkB,MAAMuG,SAClBjE,SAAU,SAACT,GAAD,OAAO,EAAKS,SAAST,MAEhCH,EAAO6E,UACN,yBAAKxH,UAAU,oBAAoB2C,EAAO6E,WAG9C,yBAAKxH,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAO8E,WAEvBnE,YAAY,WACZN,KAAK,WACLC,MAAOlD,KAAKkB,MAAMwG,SAClBlE,SAAU,SAACT,GAAD,OAAO,EAAKS,SAAST,MAEhCH,EAAO8E,UACN,yBAAKzH,UAAU,oBAAoB2C,EAAO8E,WAG9C,yBAAKzH,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAO+E,kBAEvBpE,YAAY,mBACZN,KAAK,kBACLC,MAAOlD,KAAKkB,MAAMyG,gBAClBnE,SAAU,SAACT,GAAD,OAAO,EAAKS,SAAST,MAEhCH,EAAO+E,iBACN,yBAAK1H,UAAU,oBACZ2C,EAAO+E,kBAId,2BAAOpI,KAAK,SAASU,UAAU,yC,GArHxBM,aAyIRC,gBAJS,SAACU,GAAD,MAAY,CAClC0B,OAAQ1B,EAAM0B,OACdX,SAAUf,EAAMe,YAEsB,CAAE4F,cjBzIb,SAACD,EAAS3I,GAAV,8CAAsB,WAAOC,GAAP,SAAAC,EAAA,+EAEzCC,IAAMC,KAAK,sBAAuBuI,GAFO,OAG/C3I,EAAQK,KAAK,UACbJ,EAAS,CACPK,KLXoB,aKYpBC,QAAS,KANoC,gDAS/CN,EAAS,CACPK,KLhBoB,aKiBpBC,QAAS,KAAMC,SAASC,OAXqB,yDAAtB,wDiByIdc,CAA4CgH,I,iQCzIrDM,G,wNACJ,aAAe,IAAD,8BACZ,gBACK5G,MAAQ,CACXuG,SAAU,GACVC,SAAU,GACV9E,OAAQ,IALE,E,gEAUR5C,KAAKF,MAAMmC,SAASC,YACtBlC,KAAKF,MAAMb,QAAQK,KAAK,gB,gDAIFuD,GACpBA,EAAUD,QACZ5C,KAAK8C,SAAS,CAAEF,OAAQC,EAAUD,SAEhCC,EAAUZ,SAASC,YACrBlC,KAAKF,MAAMb,QAAQK,KAAK,gB,+BAInByD,GACP/C,KAAK8C,SAAL,eACGC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAIrBH,GACPA,EAAEI,iBACF,IAAM4E,EAAe,CACnBN,SAAUzH,KAAKkB,MAAMuG,SACrBC,SAAU1H,KAAKkB,MAAMwG,UAEvB1H,KAAKF,MAAMkI,MAAMD,K,+BAGT,IAAD,OACCnF,EAAW5C,KAAKkB,MAAhB0B,OACR,OACE,yBAAK3C,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,UACA,0BAAMoD,SAAU,SAACN,GAAD,OAAO,EAAKM,SAASN,KACnC,yBAAK9C,UAAU,cACb,2BACEV,KAAK,QACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAO6E,WAEvBlE,YAAY,gBACZN,KAAK,WACLC,MAAOlD,KAAKkB,MAAMuG,SAClBjE,SAAU,SAACT,GAAD,OAAO,EAAKS,SAAST,MAEhCH,EAAO6E,UACN,yBAAKxH,UAAU,oBAAoB2C,EAAO6E,WAI9C,yBAAKxH,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWqD,IAAW,+BAAgC,CACpD,aAAcV,EAAO8E,WAEvBnE,YAAY,WACZN,KAAK,WACLC,MAAOlD,KAAKkB,MAAMwG,SAClBlE,SAAU,SAACT,GAAD,OAAO,EAAKS,SAAST,MAEhCH,EAAO8E,UACN,yBAAKzH,UAAU,oBAAoB2C,EAAO8E,WAG9C,2BAAOnI,KAAK,SAASU,UAAU,yC,GAhF3BM,aAqGLC,gBALS,SAACU,GAAD,MAAY,CAClCe,SAAUf,EAAMe,SAChBW,OAAQ1B,EAAM0B,UAGwB,CAAEoF,MlBpFrB,SAACC,GAAD,8CAAkB,WAAO/I,GAAP,mBAAAC,EAAA,+EAGjBC,IAAMC,KAAK,mBAAoB4I,GAHd,OAG7B7G,EAH6B,OAM3BE,EAAUF,EAAI1B,KAAd4B,MAGRK,aAAauG,QAAQ,WAAY5G,GAGjCD,EAAYC,GAGN6G,EAAUC,IAAW9G,GAG3BpC,EAAS,CACPK,KLjC0B,mBKkC1BC,QAAS2I,IApBwB,kDAuBnCjJ,EAAS,CACPK,KL/CoB,aKgDpBC,QAAS,KAAMC,SAASC,OAzBS,0DAAlB,wDkBoFNc,CAAoCsH,I,SCjFpCtH,gBAJS,SAACU,GAAD,MAAY,CAClCe,SAAUf,EAAMe,YAGHzB,EArBM,SAAC,GAAD,IAAcD,EAAd,EAAG8H,UAAsBpG,EAAzB,EAAyBA,SAAaqG,EAAtC,gDACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACzI,GAAD,OACkB,IAAxBmC,EAASC,WACP,kBAAC3B,EAAcT,GAEf,kBAAC,IAAD,CAAUO,GAAG,iB,6PCYrB,IAAMmI,GAAW7G,aAAa6G,SAC9B,GAAIA,GAAU,CACZnH,EAAYmH,IACZ,IAAMC,GAAgBL,IAAWI,IACjCpC,GAAMlH,SAAS,CACbK,KzBpB4B,mByBqB5BC,QAASiJ,KAGX,IAAMC,GAAcC,KAAKC,MAAQ,IAC7BH,GAAcI,IAAMH,KAEtBtC,GAAMlH,SAASwC,KACfjB,OAAOqB,SAASC,KAAO,K,IAqDZ+G,G,6UA/CX,OACE,kBAAC,IAAD,CAAU1C,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAKnG,UAAU,OACb,kBAAC,EAAD,MAKA,kBAAC,IAAD,CAAO8I,OAAK,EAACC,KAAK,IAAIX,UAAWd,KACjC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,YAAYX,UAAWb,KACzC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASX,UAAWP,KAKtC,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAciB,OAAK,EAACC,KAAK,aAAaX,UAAWxH,IACjD,kBAAC,GAAD,CAAckI,OAAK,EAACC,KAAK,cAAcX,UAAW5F,IAClD,kBAAC,GAAD,CACEsG,OAAK,EACLC,KAAK,qBACLX,UAAW5E,IAEb,kBAAC,GAAD,CACEsF,OAAK,EACLC,KAAK,oBACLX,UAAWlD,IAEb,kBAAC,GAAD,CACE4D,OAAK,EACLC,KAAK,sBACLX,UAAWzB,KAEb,kBAAC,GAAD,CACEmC,OAAK,EACLC,KAAK,wCACLX,UAAWrB,a,GAvCTzG,aCpClB0I,IAASV,OAAO,kBAAC,GAAD,MAASW,SAASC,eAAe,W","file":"static/js/main.90f0e60f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post('/api/project/', project);\r\n    history.push('/dashboard');\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get('/api/project/all');\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      'Are you sure this will delete the project and all the data related to it?'\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\n\r\n//Types for BACKLOG ACTIONS\r\nexport const GET_BACKLOG = 'GET_BACKLOG';\r\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\r\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProject } from '../../actions/projectActions';\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={() => this.onDeleteClick(project.projectIdentifier)}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getProjects } from '../actions/projectActions';\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from 'axios';\r\n\r\nconst setJwtToken = (token) => {\r\n  if (token) {\r\n    // set the header with 'Authorization' as key\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setJwtToken;\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport setJwtToken from '../securityUtils/setJwtToken';\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post('/api/users/register', newUser);\r\n    history.push('/login');\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// LoginRequest is the JSON data having username and password info\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => login request\r\n    const res = await axios.post('/api/users/login', LoginRequest);\r\n\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n\r\n    // store the token in localstorage\r\n    localStorage.setItem('jwtToken', token);\r\n\r\n    // set our token in header\r\n    setJwtToken(token);\r\n\r\n    // decode token on React & get payload\r\n    const decoded = jwt_decode(token);\r\n\r\n    // dispatch to securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('jwtToken');\r\n  setJwtToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/securityActions';\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = '/';\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullname}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={() => this.logout()}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n    headerLinks =\r\n      validToken && user ? userIsAuthenticated : userNotAuthenticated;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport classnames from 'classnames';\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: '',\r\n      projectIdentifier: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={e => this.onSubmit(e)}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={e => this.onChange(e)}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={e => this.onChange(e)}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames('form-control form-control-lg', {\r\n                        'is-invalid': errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={e => this.onChange(e)}\r\n                    ></textarea>\r\n\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={e => this.onChange(e)}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={e => this.onChange(e)}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import React, { Component } from 'react';\r\nimport { getProject, createProject } from '../../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: '',\r\n      projectName: '',\r\n      projectIdentifier: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={e => this.onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg ', {\r\n                      'is-invalid': errors.projectName\r\n                    })}\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={e => this.onChange(e)}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.description\r\n                    })}\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={e => this.onChange(e)}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={e => this.onChange(e)}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={e => this.onChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n\r\n    let priorityString;\r\n    let priorityClass;\r\n    if (project_task.priority === 1) {\r\n      priorityClass = 'bg-danger text-light';\r\n      priorityString = 'HIGH';\r\n    }\r\n    if (project_task.priority === 2) {\r\n      priorityClass = 'bg-warning text-light';\r\n      priorityString = 'MEDIUM';\r\n    }\r\n    if (project_task.priority === 3) {\r\n      priorityClass = 'bg-info text-light';\r\n      priorityString = 'LOW';\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={() =>\r\n              this.onDeleteClick(\r\n                project_task.projectIdentifier,\r\n                project_task.projectSequence\r\n              )\r\n            }\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from 'axios';\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from './types';\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    // Clear the errors in the state from previous calls\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\n//Use this also to load the existing task in update form\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    //More logic can be added to show descriptive msg if backlog_id and or pt_id doesn't exist\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting the project task ${pt_id}, this action csannot be undone.`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === 'TO_DO') {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === 'IN_PROGRESS') {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === 'DONE') {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBacklog } from '../../actions/backlogActions';\r\n\r\nclass ProjectBoard extends Component {\r\n  // ctor to handle errots\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n    let BoardContent;\r\n\r\n    //Put this in another module and import here\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board!\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) return true;\r\n\r\n  return false;\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { addProjectTask } from '../../../actions/backlogActions';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: '',\r\n      acceptanceCriteria: '',\r\n      status: '',\r\n      priority: 0,\r\n      dueDate: '',\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                Add /Update Project Task\r\n              </h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n\r\n              <form onSubmit={e => this.onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={e => this.onChange(e)}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={e => this.onChange(e)}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={e => this.onChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={e => this.onChange(e)}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={e => this.onChange(e)}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from '../../../actions/backlogActions';\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: '',\r\n      projectSequence: '',\r\n      summary: '',\r\n      acceptanceCriterion: '',\r\n      status: '',\r\n      priority: '',\r\n      dueDate: null,\r\n      projectIdentifier: '',\r\n      created_at: '',\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriterion,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_at\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriterion,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_at\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updated_task = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriterion: this.state.acceptanceCriterion,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      created_at: this.state.created_at\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updated_task,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task Id:{' '}\r\n                {this.state.projectSequence}\r\n              </p>\r\n\r\n              <form onSubmit={e => this.onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={e => this.onChange(e)}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criterion\"\r\n                    name=\"acceptanceCriterion\"\r\n                    value={this.state.acceptanceCriterion}\r\n                    onChange={e => this.onChange(e)}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={e => this.onChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={e => this.onChange(e)}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={e => this.onChange(e)}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react';\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      fullname: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form\r\n                action=\"create-profile.html\"\r\n                onSubmit={(e) => this.onSubmit(e)}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.fullname,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={(e) => this.onChange(e)}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={(e) => this.onChange(e)}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={(e) => this.onChange(e)}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={(e) => this.onChange(e)}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { login } from '../../actions/securityActions';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={(e) => this.onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={(e) => this.onChange(e)}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={(e) => this.onChange(e)}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport Dashboard from './components/Dashboard';\r\nimport Header from './components/Layout/Header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AddProject from './components/Project/AddProject';\r\nimport UpdateProject from './components/Project/UpdateProject';\r\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\r\n\r\nimport store from './store';\r\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\r\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\r\nimport Landing from './components/Layout/Landing';\r\nimport Register from './components/UserManagement/Register';\r\nimport Login from './components/UserManagement/Login';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setJwtToken from './securityUtils/setJwtToken';\r\nimport { SET_CURRENT_USER } from './actions/types';\r\nimport { logout } from './actions/securityActions';\r\nimport SecuredRoute from './securityUtils/SecureRoute';\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\nif (jwtToken) {\r\n  setJwtToken(jwtToken);\r\n  const decoded_token = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_token,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_token.exp < currentTime) {\r\n    //handle logout\r\n    store.dispatch(logout());\r\n    window.location.href = '/';\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //public routes\r\n            }\r\n\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n\r\n            {\r\n              //private routes\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/projectBoard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n                component={UpdateProjectTask}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}